name: publish to nuget
on:
  push:
    branches:
      - develop # Your default release branch
jobs:
  publish:
    name: list on nuget
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      # Required for a specific dotnet version that doesn't come with ubuntu-latest / windows-latest
      # Visit bit.ly/2synnZl to see the list of SDKs that are pre-installed with ubuntu-latest / windows-latest
      # - name: Setup dotnet
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 3.1.100
      - name: build NetSparkle in Release
        run: dotnet build src/NetSparkle/NetSparkle.csproj --configuration Release
        #run: dotnet build NetSparkle.sln --configuration Release
      
      - name: build NetSparkle.UI.WinForms in Release
        run: dotnet build src/NetSparkle.UI.WinForms/NetSparkle.UI.WinForms.csproj --configuration Release
      
      - name: build NetSparkle.UI.WPF in Release
        run: dotnet build src/NetSparkle.UI.WPF/NetSparkle.UI.WPF.csproj --configuration Release
        
      # Publish
      - name: publish netsparkle.new on version change
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: src/NetSparkle/NetSparkle.csproj # Relative to repository root
          # VERSION_FILE_PATH: Directory.Build.props # Filepath with version info, relative to repository root. Defaults to project file
          # VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: false # Flag to enable / disalge git tagging
          # TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
