NDSummary.OnToolTipsLoaded("File:NetSparkle/Libraries/MarkdownSharp.cs",{333:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype333\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">MarkdownSharp.</span>&#8203;MarkdownOptions</div></div></div><div class=\"TTSummary\">Options for configuring MarkdownSharp.</div></div>",335:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype335\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AutoHyperlink { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, (most) bare plain URLs are auto-hyperlinked WARNING: this is a significant deviation from the markdown spec</div></div>",336:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype336\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AutoNewlines { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, RETURN becomes a literal newline WARNING: this is a significant deviation from the markdown spec</div></div>",337:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype337\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> EmptyElementSuffix { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">use &quot;&gt;&quot; for HTML output, or &quot; /&gt;&quot; for XHTML output</div></div>",338:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype338\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> LinkEmails { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when false, email addresses will never be auto-linked WARNING: this is a significant deviation from the markdown spec</div></div>",339:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype339\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> StrictBoldItalic { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, bold and italic require non-word characters on either side WARNING: this is a significant deviation from the markdown spec</div></div>",340:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype340\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AsteriskIntraWordEmphasis { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, asterisks may be used for intraword emphasis this does nothing if StrictBoldItalic is false</div></div>",341:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype341\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">MarkdownSharp.</span>&#8203;Markdown</div></div></div><div class=\"TTSummary\">Markdown is a text-to-HTML conversion tool for web writers.&nbsp; Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML).</div></div>",343:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype343\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const string</span> _version</div></div>",345:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype345\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Markdown()</div><div class=\"TTSummary\">Create a new Markdown instance using default options</div></div>",346:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype346\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Markdown(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">loadOptionsFromConfigFile</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a new Markdown instance and optionally load options from a configuration file. There they should be stored in the appSettings section, available options are: Markdown.StrictBoldItalic (true/false) Markdown.EmptyElementSuffix (&quot;&gt;&quot; or &quot; /&gt;&quot; without the quotes) Markdown.LinkEmails (true/false) Markdown.AutoNewLines (true/false) Markdown.AutoHyperlink (true/false) Markdown.AsteriskIntraWordEmphasis (true/false)</div></div>",347:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype347\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Markdown(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">MarkdownOptions&nbsp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a new Markdown instance and set the options from the MarkdownOptions object.</div></div>",349:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype349\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> EmptyElementSuffix { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">use &quot;&gt;&quot; for HTML output, or &quot; /&gt;&quot; for XHTML output</div></div>",350:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype350\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> LinkEmails { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when false, email addresses will never be auto-linked WARNING: this is a significant deviation from the markdown spec</div></div>",351:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype351\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> StrictBoldItalic { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, bold and italic require non-word characters on either side WARNING: this is a significant deviation from the markdown spec</div></div>",352:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype352\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AsteriskIntraWordEmphasis { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, asterisks may be used for intraword emphasis this does nothing if StrictBoldItalic is false</div></div>",353:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype353\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AutoNewLines { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, RETURN becomes a literal newline WARNING: this is a significant deviation from the markdown spec</div></div>",354:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype354\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AutoHyperlink { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">when true, (most) bare plain URLs are auto-hyperlinked WARNING: this is a significant deviation from the markdown spec</div></div>",356:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype356\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private enum</span> TokenType</div></div>",357:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype357\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">private</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">MarkdownSharp.&#8203;Markdown.</span>&#8203;Token</div></div></div></div>",359:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype359\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Token(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">TokenType&nbsp;</td><td class=\"PName last\">type,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",361:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype361\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> TokenType Type</div></div>",362:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype362\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> Value</div></div>",364:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype364\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const int</span> _nestDepth</div><div class=\"TTSummary\">maximum nested depth of [] and () supported by the transform; implementation detail</div></div>",365:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype365\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const int</span> _tabWidth</div><div class=\"TTSummary\">Tabs are automatically converted to spaces as part of the transform this constant determines how &quot;wide&quot; those tabs become in spaces</div></div>",366:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype366\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const string</span> _markerUL</div></div>",367:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype367\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const string</span> _markerOL</div></div>",369:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype369\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, <span class=\"SHKeyword\">string</span>&gt; _escapeTable</div></div>",370:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype370\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, <span class=\"SHKeyword\">string</span>&gt; _invertedEscapeTable</div></div>",371:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype371\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, <span class=\"SHKeyword\">string</span>&gt; _backslashEscapeTable</div></div>",372:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype372\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, <span class=\"SHKeyword\">string</span>&gt; _urls</div></div>",373:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype373\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, <span class=\"SHKeyword\">string</span>&gt; _titles</div></div>",374:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype374\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, <span class=\"SHKeyword\">string</span>&gt; _htmlBlocks</div></div>",375:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype375\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private int</span> _listLevel</div></div>",377:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype377\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const string</span> AutoLinkPreventionMarker</div></div>",379:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype379\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static</span> Markdown()</div><div class=\"TTSummary\">In the static constuctor we\'ll initialize what stays the same across all transforms.</div></div>",381:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype381\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> Version { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">current version of MarkdownSharp; see http://code.google.com/p/markdownsharp/ for the latest code or to contribute</div></div>",383:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype383\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public string</span> Transform(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Transforms the provided Markdown-formatted text to HTML; see http://en.wikipedia.org/wiki/Markdown</div></div>",384:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype384\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> RunBlockGamut(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">text,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">unhash&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">createParagraphs&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Perform transformations that form block-level tags like paragraphs, headers, and list items.</div></div>",385:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype385\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> RunSpanGamut(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Perform transformations that occur *within* block-level tags like paragraphs, headers, and list items.</div></div>",387:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype387\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _newlinesLeadingTrailing</div></div>",388:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype388\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _newlinesMultiple</div></div>",389:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype389\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _leadingWhitespace</div></div>",390:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype390\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _htmlBlockHash</div></div>",392:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype392\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> FormParagraphs(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">text,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">unhash&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">createParagraphs&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">splits on two or more newlines, to form &quot;paragraphs&quot;; each paragraph is then unhashed (if it is a hash and unhashing isn\'t turned off) or wrapped in HTML p tag</div></div>",393:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype393\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private void</span> Setup()</div></div>",394:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype394\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private void</span> Cleanup()</div></div>",396:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype396\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static string</span> _nestedBracketsPattern</div></div>",398:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype398\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static string</span> GetNestedBracketsPattern()</div><div class=\"TTSummary\">Reusable pattern to match balanced [brackets]. See Friedl\'s &quot;Mastering Regular Expressions&quot;, 2nd Ed., pp. 328-331.</div></div>",400:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype400\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static string</span> _nestedParensPattern</div></div>",402:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype402\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static string</span> GetNestedParensPattern()</div><div class=\"TTSummary\">Reusable pattern to match balanced (parens). See Friedl\'s &quot;Mastering Regular Expressions&quot;, 2nd Ed., pp. 328-331.</div></div>",404:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype404\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _linkDef</div></div>",406:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype406\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> StripLinkDefinitions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Strips link definitions from text, stores the URLs and titles in hash references.</div></div>",407:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype407\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> LinkEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",409:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype409\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _blocksHtml</div></div>",411:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype411\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static string</span> GetBlockPattern()</div><div class=\"TTSummary\">derived pretty much verbatim from PHP Markdown</div></div>",412:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype412\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> HashHTMLBlocks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">replaces any block-level HTML blocks with hash entries</div></div>",413:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype413\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> HtmlEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",414:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype414\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private static string</span> GetHashKey(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isHtmlBlock</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",416:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype416\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _htmlTokens</div></div>",418:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype418\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private</span> List&lt;Token&gt; TokenizeHTML(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">returns an array of HTML tokens comprising the input string. Each token is either a tag (possibly with nested, tags contained therein, such as &lt;a href=&quot;&lt;MTFoo&gt;&quot;&gt;, or a run of text between tags. Each element of the array is a two-element array; the first is either \'tag\' or \'text\'; the second is the actual value.</div></div>",420:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype420\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _anchorRef</div></div>",421:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype421\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _anchorInline</div></div>",422:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype422\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _anchorRefShortcut</div></div>",424:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype424\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoAnchors(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown link shortcuts into HTML anchor tags</div></div>",425:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype425\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> SaveFromAutoLinking(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",426:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype426\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> AnchorRefEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",427:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype427\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> AnchorRefShortcutEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",428:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype428\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> AnchorInlineEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",430:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype430\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _imagesRef</div></div>",431:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype431\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _imagesInline</div></div>",433:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype433\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoImages(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown image shortcuts into HTML img tags.</div></div>",434:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype434\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EscapeImageAltText(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",435:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype435\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> ImageReferenceEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",436:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype436\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> ImageInlineEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",437:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype437\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> ImageTag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">url,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">altText,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">title</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",439:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype439\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _headerSetext</div></div>",440:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype440\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _headerAtx</div></div>",442:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype442\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoHeaders(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown headers into HTML header tags</div></div>",443:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype443\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> SetextHeaderEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",444:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype444\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> AtxHeaderEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",446:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype446\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _horizontalRules</div></div>",448:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype448\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoHorizontalRules(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown horizontal rules into HTML hr tags</div></div>",450:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype450\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly string</span> _wholeList</div></div>",451:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype451\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _listNested</div></div>",452:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype452\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _listTopLevel</div></div>",454:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype454\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoLists(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown lists into HTML ul and ol and li tags</div></div>",455:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype455\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> ListEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",456:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype456\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> ProcessListItems(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">list,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">marker</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Process the contents of a single ordered or unordered list, splitting it into individual list items.</div></div>",458:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype458\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _codeBlock</div></div>",460:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype460\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoCodeBlocks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">/// Turn Markdown 4-space indented code into HTML pre code blocks</div></div>",461:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype461\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> CodeBlockEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",463:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype463\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _codeSpan</div></div>",465:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype465\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoCodeSpans(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown `code spans` into HTML code tags</div></div>",466:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype466\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> CodeSpanEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",468:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype468\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _bold</div></div>",469:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype469\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _semiStrictBold</div></div>",470:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype470\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _strictBold</div></div>",471:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype471\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _italic</div></div>",472:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype472\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _semiStrictItalic</div></div>",473:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype473\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _strictItalic</div></div>",475:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype475\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoItalicsAndBold(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown *italics* and **bold** into HTML strong and em tags</div></div>",476:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype476\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoHardBreaks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn markdown line breaks (two space at end of line) into HTML break tags</div></div>",478:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype478\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _blockquote</div></div>",480:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype480\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoBlockQuotes(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn Markdown &gt; quoted blocks into HTML blockquote blocks</div></div>",481:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype481\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> BlockQuoteEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",482:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype482\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> BlockQuoteEvaluator2(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",484:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype484\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const string</span> _charInsideUrl</div></div>",485:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype485\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private const string</span> _charEndingUrl</div></div>",487:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype487\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _autolinkBare</div></div>",488:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype488\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _endCharRegex</div></div>",490:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype490\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private static string</span> HandleTrailingParens(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",492:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype492\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _autoEmailBare</div></div>",494:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype494\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private static string</span> EmailBareLinkEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",496:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype496\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private readonly static</span> Regex _linkEmail</div></div>",498:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype498\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> DoAutoLinks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Turn angle-delimited URLs into HTML anchor tags</div></div>",499:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype499\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> HyperlinkEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",500:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype500\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EmailEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",502:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype502\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _outDent</div></div>",504:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype504\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> Outdent(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">block</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Remove one level of line-leading spaces</div></div>",505:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype505\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EncodeEmailAddress(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">addr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">encodes email address randomly roughly 10% raw, 45% hex, 45% dec note that @ is always encoded and : never is</div></div>",507:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype507\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _codeEncoder</div></div>",509:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype509\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EncodeCode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">code</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Encode/escape certain Markdown characters inside code blocks and spans where they are literals</div></div>",510:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype510\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EncodeCodeEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",512:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype512\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _amps</div></div>",513:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype513\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _angles</div></div>",515:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype515\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EncodeAmpsAndAngles(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Encode any ampersands (that aren\'t part of an HTML entity) and left or right angle brackets</div></div>",517:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype517\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _backslashEscapes</div></div>",519:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype519\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EscapeBackslashes(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Encodes any escaped characters such as \\`, \\*, \\[ etc</div></div>",520:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype520\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EscapeBackslashesEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",522:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype522\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private static readonly</span> Regex _unescapes</div></div>",524:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype524\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> Unescape(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">swap back in all the special characters we\'ve hidden</div></div>",525:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype525\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> UnescapeEvaluator(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Match&nbsp;</td><td class=\"PName last\">match</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",526:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype526\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EscapeBoldItalic(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">escapes Bold [ * ] and Italic [ _ ] characters</div></div>",527:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype527\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private static string</span> AttributeEncode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",528:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype528\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private static string</span> AttributeSafeUrl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">s</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",529:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype529\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> EscapeSpecialCharsWithinTagAttributes(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Within tags -- meaning between &lt; and &gt; -- encode [\\ ` * _] so they don\'t conflict with their use in Markdown for code, italics and strong.&nbsp; We\'re replacing each such character with its corresponding hash value; this is likely overkill, but it should prevent us from colliding with the escape values by accident.</div></div>",530:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype530\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private string</span> Normalize(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">convert all tabs to _tabWidth spaces; standardizes line endings from DOS (CR LF) or Mac (CR) to UNIX (LF); makes sure text ends with a couple of newlines; removes any blank lines (only spaces) in the text</div></div>",531:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype531\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private static string</span> RepeatString(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">count</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">this is to emulate what\'s evailable in PHP</div></div>"});