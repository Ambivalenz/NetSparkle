NDContentPage.OnToolTipsLoaded({108:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype108\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> ValidationResult</div><div class=\"TTSummary\">Return value of the signature verification check functions.</div></div>",131:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype131\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> SecurityMode</div><div class=\"TTSummary\">Controls the situations where files have to be signed with the private key.&nbsp; If both a public key and a signature are present, they always have to be valid.&nbsp; We recommend using SecurityMode.Strict if at all possible.&nbsp; Note that ReleaseNotesGrabber needs to have ReleaseNotesGrabber.ChecksReleaseNotesSignature set to true in order to verify signatures.</div></div>",228:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype228\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">NetSparkleUpdater.&#8203;Interfaces.</span>&#8203;ISignatureVerifier</div></div></div><div class=\"TTSummary\">Interface for objects that can verify a signature for an app cast, a downloaded file, or some other item. This is used to verify that the correct data was downloaded from the internet and there wasn\'t any nefarious play or manipulation of items when something was delivered to the end user.</div></div>"});